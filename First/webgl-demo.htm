
<html>
  <head>
    <title>WebGL - HW4.1!</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
	<script src="sylvester.js" type="text/javascript"></script>
    <script src="glUtils.js" type="text/javascript"></script>
    <script src="webgl-demo.js" type="text/javascript"></script>
	
   <!-- Fragment shader program -->
    <script id="shader-fs" type="x-shader/x-fragment" tag="h">
      precision mediump float;
      varying highp vec2 vTextureCoord;
      varying highp vec3 vLighting;
      varying float intensity;
      
      uniform sampler2D uSampler;
  
      void main(void) {

        highp vec4 texelColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        
        vec3 light = vLighting * intensity;
        
        gl_FragColor = vec4(texelColor.rgb * light, texelColor.a);
      }
    </script>
       <script tag="h">

console.log(lightIntensity);

   </script>

    <!-- Vertex shader program -->
    
    <script id="shader-vs" type="x-shader/x-vertex">
      attribute highp vec3 aVertexNormal;
      attribute highp vec3 aVertexPosition;
      attribute highp vec2 aTextureCoord;
    
      uniform highp mat4 uNormalMatrix;
      uniform highp mat4 uMVMatrix;
      uniform highp mat4 uPMatrix;
      uniform float foo;
      varying highp vec2 vTextureCoord;
      varying highp vec3 vLighting;
      varying float intensity;

      uniform float lightX;
      uniform float lightY;
      uniform float lightZ;
      
      void main(void) {
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        vTextureCoord = aTextureCoord;
        
        // Apply lighting effect
        intensity = foo;
        highp vec3 ambientLight = vec3(0.6, 0.6, 0.6);
        highp vec3 directionalLightColor = vec3(0.5, 0.5, 0.75);
        highp vec3 directionalVector = vec3(lightX, lightY, lightZ);
        
        highp vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);
        
        highp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);
        vLighting = ambientLight + (directionalLightColor * directional);
      }
    </script>
    <button id="theButton">Reverese</button>

    <button id="lowerBrightness">-Brightness</button>
    <button id="higherBrightness">+Brightness</button>
    <button id="upx">Light Direction x+</button>  
      <button id="upy">Light Direction y+</button>  
      <button id="upz">Light Direction z+</button>  
      <button id="downx">Light Direction x-</button>  
      <button id="downy">Light Direction y-</button>  
      <button id="downz">Light Direction z-</button>  
  </head>	  
  
  <body onload="start()">
    <canvas id="glcanvas" width="640" height="480">
      Your browser doesn't appear to support the HTML5 <code>&lt;canvas&gt;</code> element.
    </canvas>
  </body>
</html>